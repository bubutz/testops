name: Test msbuild

on: workflow_dispatch

jobs:
  ps:
    runs-on: windows-latest
    steps:
      # - shell: powershell
      #   run: |
      #     Get-ChildItem 'HKLM:\SOFTWARE\Microsoft\NET Framework Setup\NDP' -recurse |
      #     Get-ItemProperty -name Version,Release -EA 0 |
      #     Where { $_.PSChildName -match '^(?!S)\p{L}'} |
      #     Select PSChildName, Version, Release
      # - shell: powershell
      #   run: Install-Module -Name DotNetVersionLister -Scope CurrentUser -Force
      # - shell: powershell
      #   run: Get-STDotNetVersion
      # - shell: powershell
      #   run: Invoke-WebRequest -Uri "https://download.microsoft.com/download/B/A/4/BA4A7E71-2906-4B2D-A0E1-80CF16844F5F/dotNetFx45_Full_setup.exe" -Outfile "${{ runner.temp }}\DNF45.exe"
      # - shell: powershell
      #   run: |
      #     Start-Process -FilePath "${{ runner.temp }}\DNF45.exe" -ArgumentList "/q /norestart" -Wait -PassThru -RedirectStandardOutput "${{ runner.temp }}\install.log" -RedirectStandardError "${{ runner.temp }}\error.log"
      #     Get-Content "${{ runner.temp }}\install.log"
      #     Get-Content "${{ runner.temp }}\error.log"
      # - shell: powershell
      #   run: |
      #     Get-ChildItem 'HKLM:\SOFTWARE\Microsoft\NET Framework Setup\NDP' -recurse |
      #     Get-ItemProperty -name Version,Release -EA 0 |
      #     Where { $_.PSChildName -match '^(?!S)\p{L}'} |
      #     Select PSChildName, Version, Release
      # - shell: powershell
      #   run: Get-STDotNetVersion
      # - run: ls "C:\Windows\Microsoft.NET\Framework\"
      - uses: microsoft/setup-msbuild@v2
      - shell: bash
        run: |
          curl -L https://www.nuget.org/api/v2/package/Microsoft.NETFramework.ReferenceAssemblies.net45/1.0.3 -o "${{ runner.temp }}\dnf45.zip"
          file "${{ runner.temp }}\dnf45.zip"
          sha1sum ${{ runner.temp }}\dnf45.zip
          echo sum is 5aae67e77a3a628eed5ccceb6d5cf9db989742e6

  # cmd:
  #   runs-on: windows-latest
  #   steps:
  #     - shell: powershell
  #       run: Install-Module -Name DotNetVersionLister -Scope CurrentUser -Force
  #     - shell: powershell
  #       run: Get-STDotNetVersion
